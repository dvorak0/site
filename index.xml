<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Seeking Complexity</title><link>https://yangzhenfei.com/</link><description>Recent content on Seeking Complexity</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Mon, 09 Jan 2023 10:43:00 +0800</lastBuildDate><atom:link href="https://yangzhenfei.com/index.xml" rel="self" type="application/rss+xml"/><item><title>make the world a better place</title><link>https://yangzhenfei.com/posts/20230109104349-make_the_world_a_better_place/</link><pubDate>Mon, 09 Jan 2023 10:43:00 +0800</pubDate><guid>https://yangzhenfei.com/posts/20230109104349-make_the_world_a_better_place/</guid><description>哈哈，本来挺好的一个愿景，现在变味了。
平常难免屈从于各种各样的短期目标，过程中也感觉到，做的东西是挺好的，但是又不够好。
还是希望有一个更大更香的胡萝卜在前面。
现在大概有三类大饼，让我真心向往。
自动驾驶：1/10价格的滴滴 2022年大家已经比较趋同地放弃robotaxi的商业可能性了，永敢地拥抱了竞争激烈的辅助驾驶市场： 好的方面是汽车销量和自动驾驶的渗透率都在超预期上升，坏的方面是同质化严重导致价值集中聚集在品牌方。
我自己并不是从业者，从外人的视角来看，一定存在MTBF到了某个值，使得robotaxi（+ 1vN 遥控员）的成本低于滴滴（+ 1v1 驾驶员）一个数量级。
有几个前置条件：
消费者（包括车厂）是从众的，也就是他看到别人（在有限的时间）是安全的，他也会认为自己是安全的。 这个&amp;quot;看到&amp;quot;要多久，mobileye给出的答案是 \(10^7\) 小时： 现有的范式是足够达到MTBF的，这里用到两个曲线： 模型capacity：算法precision-recall vs data size，对应tesla强调的software 2.0 经过tesla的教育，大家都理解了。
冗余度（逆融合）是什么，也可以说是融合更早发生和更晚发生分别有什么优缺点，对应mobileye强调的True Redundency
更早地融合，系统更黑盒，更容易有更好的成绩，有利于拟合。 更晚地融合，更平行，更独立，有利于测试。
有点像一个系统设计，你是从起点开始设计，还是从终点开始设计：
如果你从起点开始设计，最关心的是如何是现在的系统更好，那么应该要更好的成绩，要更早地融合。
如果你从终点开始设计，要先关心如何达到给定的测试量：最晚的融合对应的测试量是不同的车，再回一步是，同样的车，两套系统（pure vision &amp;amp; pure lidar)，也可以继续回。
看起来依旧是可以追求的，路子还没有锁死。
家用机器人：自然语言的全任务交互 不得不承认自己对自己之前的想法动摇了，本来觉得抓取的技术都难以跨越，经过ChatGPT的洗礼，AGI的实现又一次被提起。
ChatGPT人格化的回答，给了我一种新的对AGI的理解。如果一个并不具有智慧的agent，实际上，可以接受语言形式的指令，做到难度依次提升的任务：
人格化的对话 写一些文字给我 操作所有的软件 做一杯咖啡RT-1 是不是已经是一个革命性地AGI实现了。
期待机器学习这些莽夫继续去革命机器人领域。
元宇宙：脱实向虚 我自己是认为这个是我最期待的，我完全不介意我自己的意识脱离自己的肉体，不过这种取向一定是有很大争议的。
人类的终点在哪里呢，盲目猜测现在的生产力，已经足够每个人每周工作一天，过上老友记里面的生活了。
现在的额外工作，很多是为了“新型”的享乐：我要穿更花哨的衣服，我要吃更稀有的动物，我要去没去过的地方，我要更大的房子更流线型的汽车。
这样下来，我们是不是更快乐了？
从这个角度里，元宇宙似乎像是一种残酷的实验，强化更抽象的概念（更强的人和人的连接），弱化更具体的概念（更弱的物质享受）。
扯的有点远了。
现在元宇宙太虚了，太多技术还不成熟，太多应用都流行不起来。
上一次影响深刻的概念还是用video seethrough去实现AR，非常接地气的想法：基本上共享了手机的发展路径（更高分辨率的相机，更强的显示芯片，更HDR的屏幕）。 看好。
总结 都是不太“靠谱”的想法，但是还是希望有生之年能看到，不然现在的这些进展，实在很难相信如何make the world a better place。</description></item><item><title>《也许你该找个人聊聊》</title><link>https://yangzhenfei.com/posts/20220919103210-%E4%B9%9F%E8%AE%B8%E4%BD%A0%E8%AF%A5%E6%89%BE%E4%B8%AA%E4%BA%BA%E8%81%8A%E8%81%8A/</link><pubDate>Mon, 19 Sep 2022 10:32:00 +0800</pubDate><guid>https://yangzhenfei.com/posts/20220919103210-%E4%B9%9F%E8%AE%B8%E4%BD%A0%E8%AF%A5%E6%89%BE%E4%B8%AA%E4%BA%BA%E8%81%8A%E8%81%8A/</guid><description>TLDR 心理咨询师的工作笔记，记录了：
一个四十多岁、事业成功、自以为是，认为身边所有人都是蠢货的好莱坞制片人； 拒绝让人理解他，用”别人是愚蠢的“来使自己”满足“，才不至于陷入失去儿子的痛苦。 一个三十多岁、刚刚新婚就被诊断出患有绝症，时日不多的大学女教师； 想去做收银员，就去做了。 一个六十九岁、离过三次婚，感觉孤独绝望，声称生活再不好转就要在七十岁生日当天自杀的老太太； 我们都是有机会弥补错误的，永远有机会。 一个二十多岁、有原生家庭创伤和酗酒问题，在爱情中频频受挫的姑娘。 先把酒戒了？印象最不深的一个人。 更重要的，作者自己 逃避不喜欢的工作，带来了”无可弥补“的损失。偶尔可以跳出来看自己，更多时候是个普通的咨询者。 的治疗记录。
人和人的心理机制如此的类似，我们的感受也是有章可循，我们的痛苦也不是那么独一无二。
2 世事难两全 大多数人都是心理治疗师口中“不可靠的故事叙述者”。不是说他们有意要误导别人，只是每个故事都有许多条线索，人们总是避开那些与自己观点不吻合的线索。
17 没有记忆也没有期望 人们渴望被理解，也渴望理解别人。
第二部分 诚实是比同情更有效的良药，它有抚慰人心的力量，却往往深藏不露。——格蕾特尔·埃利希
20 第一次忏悔 有一件事我没告诉温德尔，那就是我现在本该埋头写书，但写作进行得并不顺利。“进行得并不顺利”具体来说就是：我根本还没动笔。
是我
有一件事我没告诉温德尔，那就是我现在本该埋头写书，但写作进行得并不顺利。“进行得并不顺利”具体来说就是：我根本还没动笔。
23 乔氏超市 治疗师总是告诉来访者们：追随你的嫉妒心，它会告诉你你想要什么。
24 做一个了结 通常在治疗刚开始的时候，我会让来访者尽可能详细地叙述她在过去二十四小时中的经历。这样我就能掌握来访者当前的情况：他们与别人的关联性如何，是否有归属感；他们生活中的人际关系构成是什么样的；他们要担负什么样的责任，什么事会让他们感觉到压力；他们的感情关系是平静的，还是激烈的；以及他们会如何安排自己的时间。事实证明，如果不是一小时一小时掰开来，复述自己干过些什么，我们中的大多数人都不知道自己的一天是怎么过的。
安德鲁·所罗门在《走出忧郁》中写道：“抑郁的对立面不是快乐，而是活力。”
精力是个非常好的indicator 比智力运气等都重要
26 不期而遇 在电影中，治疗师的沉默已经成为一种落入俗套的桥段，但只有沉默才能让人们真正听到自己内心的声音。交谈让人们必须不停地转动脑筋，从而安全地避开自己的情绪，但沉默就像是清空脑袋里的垃圾。当你停止用言语来填补空虚，就会有一些重要的东西浮出水面。而当我们在沉默中共处，对于来访者来说可能是一片未知的、蕴含思想和情感的金矿。所
像是冥想
28 上瘾 “也许，我的问题不在于依赖心理治疗，而在于依赖酒精。”这是她第一次这么说。但一年之后，当她遇到那小哥时，她依然在喝酒。
笑
33 因果报应 夏洛特在等着我告诉她该怎么处理那份讲演文件，但她现在应该也能猜到，我不会给她任何指令性的建议。我当治疗师以来感到十分惊讶的一件事就是，人们常常期望由别人来告诉自己该干什么，就好像别人手里有标准答案似的，又好像我们每天在日常生活中做的那么多选择真的都有对错之分。我在自己的文件堆旁边贴了一个字条，上面写着“好为人师的假博识”（ultracrepidarianism），意思就是“习惯就一个人知识或能力范围以外的事情发表见解或提供建议”。我以此提醒自己，作为一名心理治疗师，我可以理解别人，帮助他们厘清自己想做的事，但我不能替他们作出人生抉择。刚踏入这一行的时候，我的确偶尔会感到出于善意的压力（至少我自己是这样相信的）要给别人提供一些建议。但后来，我意识到人们其实讨厌被告知应该要做什么。虽然人们会重复地、不厌其烦地要你告诉他们该做什么，但一旦你屈从了，给出了建议，他们却不会释怀，而是感到怨恨。而且即使后续发展一切顺利，也无法避免人们心中的怨恨，因为人们最终还是希望在自己的生活中掌控话语权。这也就是为什么儿童从幼年开始就祈求父母让他们自己做决定的原因。（然而等他们长大以后，却祈求我剥夺他们自己做决定的自由。）
她慢慢向门口走去，但又在门口停了下来，她常常会这样停下来，问我一个问题，或是跟我说一句她完全可以在治疗过程中跟我说的话。她和约翰都会这样，我们治疗师通常把这个行为称为“门把手边的告白”。“对了——”她漫不经心地说道，但我有一种预感，她接下来要说的绝不是什么随口一提的事情。这在来访者中并不少见，整个治疗过程中都在顾左右而言他，直到最后十秒钟才说出一些重要的事情，
37 终极问题 心理治疗的过程是极其特殊的，没有一种一刀切的方式能帮助所有人面对他们最深层的存在性恐惧——也就是亚隆提出的“终极问题”。这四个终极问题是：死亡、孤独、自由和无意义。
38 乐高乐园 同时我还想到，当我们面对那些无法言说的痛楚，每个人都会有不同的方法来保护自己。比如说，把自己唾弃的自我从心里剥离，再塑造一个带有自恋特质的假象，把不想要的那部分自我隐藏在假象的背后。你会对自己说：“是的，悲剧确实发生了，但我没事。没有什么能伤害我，因为我很特别。我是天降的惊喜。
46 蜜蜂 “你是在假装自己是个很酷的女孩，”我说，“仿佛没有渴望，没有感觉，随波逐流——但其实，你是有感觉的。”
52 母亲们 我想到了温德尔曾经说过的话，“生活的本质是变化，而人类的本性是抗拒变化。”他告诉我，这是他对以前读过的一段话的提炼，他觉得无论是作为一个普通人还是作为一个心理治疗师，这话都让他产生了共鸣，因为这反映了几乎所有人面临的挣扎。
56 幸福就在有时 “当我和我的家人们一起在地上打滚的时候，”他开口说道，“我冒出了一个特别奇怪的想法。我当时非常希望你能看到那一幕，因为那一刻的我是你所不了解的我。因为你知道，在这里，我们谈的一切都是悲观失望的。但今天开车到这里来的路上，我又想，‘或许她是了解的。’或许你也像有些治疗师那样，对人有天生的第六感。因为我感觉你是懂我的，你明白我的意思吗？——我不知道这是因为你提的各种烦人的问题，还是你要我承受的暴力般的沉默，但我就是有这种感觉。我也不是想给你戴高帽子，但我真的觉得，你比任何人都更全面地了解我全部的人性。”我感动到说不出话来。我很想告诉约翰我有多感动，不只是因为他有这样的感受，而是因为他愿意和我分享他的感受。我还想告诉他我会永远记得这个时刻。但还没等我的嗓子缓过劲儿来能开口说话，约翰就惊呼道：“噢，老天爷，你可千万别在我面前哭啊。”</description></item><item><title>《黑客与画家》</title><link>https://yangzhenfei.com/posts/20220913115753-%E9%BB%91%E5%AE%A2%E4%B8%8E%E7%94%BB%E5%AE%B6/</link><pubDate>Tue, 13 Sep 2022 11:57:00 +0800</pubDate><guid>https://yangzhenfei.com/posts/20220913115753-%E9%BB%91%E5%AE%A2%E4%B8%8E%E7%94%BB%E5%AE%B6/</guid><description>TLDR 一个太久在我列表里的书。
主要是paul graham的Essays博客集（依旧在更新），主要讲述从自己视角和经历出发的对世界的评论：
简单来说就是用实际的创业行动来对抗既有规律里的荒谬之处。
1 为什么书呆子不受欢迎 许多书呆子可能都与我一样，直到高中毕业多年后，才去读中学里的指定读物。
确实
我在这篇文章中发表了一些刺耳的意见
希望更多人把内心的“有刺耳”想法分享出来，会有人共鸣
4 良好的坏习惯 公民自由真的是国家富强的原因，而不是结果吗？我认为是的。
是吗？
创业公司 如果你的创业公司正在与一家大公司竞争，这一点就很有利。
一个命题 下面举一个简单的例子说明这个经济学命题。如果你是一个20多岁的优秀黑客，每年的薪水大约是8万美元。这意味着，平均来看，你必须每年至少为公司带来8万美元利润，这样才能保证公司没有亏钱。但是，你的真正工作时间其实可以是公司上班时间的2倍，如果你全神贯注，每小时的产出可以提高3倍。[插图]如果再把大公司里令人讨厌的中间管理层除去（他们经常以主管的身份妨碍你的工作），你的效率可以再提高2倍。还有一个可以提高效率的地方：你不用再完成强行指派给你的工作，尽可以根据自己的愿望，做出最能发挥你聪明才智的成果。假定这会把工作效率再增加三倍。将这些因子放在一起做乘法，你的工作效率将是在公司时的36倍。[插图]如果一个优秀黑客在大公司里的身价是每年8万美元，那么一个勤奋工作、摆脱杂事干扰的聪明黑客，他的工作相当于每年新创造300万美元的价值。
忽悠能力可以
手工艺人 目前还存在的最大的手工艺人群体就是程序员。
确实
可测量性和可放大性 如果你有一个令你感到安全的工作，你是不会致富的，因为没有危险，就几乎等于没有可放大性。
反思
高科技 = 可放大性 俗话说得好，最好的防御就是进攻。如果你开发出来的技术是竞争对手难于复制的，那就够了，你不需要依靠其他防御手段了。一开始就选择较难的问题，此后的各种决策都选择较难的那个选项
选择难的那个吗
偷窃 17世纪的英国很像今天的第三世界，当官是公认的发财职业。
哈哈
11 一百年后的编程语言 essay（论文）这个词来自法语的动词essayer，意思是“试试看”。
创业公司的合气道7 在Viaweb创业期间，我读过大量竞争对手的招聘职位。差不多每个月都有一个新的竞争对手浮出水面。我首先会看他们的产品有没有一个试用版，然后就去找他们的招聘职位。这样过了几年，我就知道哪些公司值得关注，哪些公司不用在意。有些公司的职位描述使用了大量的IT词汇，这样的内容越多，这家公司就越不构成威胁。最不用担心的竞争对手就是那些要求应聘者具有Oracle数据库经验的公司，你永远不必担心他们。如果是招聘C++或Java程序员的公司，对你也不会构成威胁。如果他们招聘Perl或Python程序员，就稍微有点威胁了。至少这听起来像一家技术公司，并且由黑客控制。如果我有幸见到一家招聘Lisp黑客的公司，就会真的感到如临大敌。
再设计 让这两股相反的力量保持平衡是很难的。初出茅庐的年轻黑客都很乐观，自以为做出了伟大的产品，从不反思和改进。上了年纪的黑客又太不自信，甚至故意回避一些挑战性很强的项目。</description></item><item><title>nimby</title><link>https://yangzhenfei.com/posts/20220628105351-nimby/</link><pubDate>Tue, 28 Jun 2022 10:53:00 +0800</pubDate><guid>https://yangzhenfei.com/posts/20220628105351-nimby/</guid><description>邻避效应</description></item><item><title>GTD</title><link>https://yangzhenfei.com/posts/20220527110715-gtd/</link><pubDate>Fri, 27 May 2022 11:07:00 +0800</pubDate><guid>https://yangzhenfei.com/posts/20220527110715-gtd/</guid><description>https://hamberg.no/gtd
GTD in 15 minutes
TLDR 2min可以搞定的事情，不要进待办系统，马上做 写下来write it down, using org-mode</description></item><item><title>probabilistic_programming</title><link>https://yangzhenfei.com/posts/20220520111929-probabilistic_programming/</link><pubDate>Fri, 20 May 2022 11:19:00 +0800</pubDate><guid>https://yangzhenfei.com/posts/20220520111929-probabilistic_programming/</guid><description>say bye to a gaussian world
https://taku-y.github.io/notebook/20170919/slam_advi.html</description></item><item><title>write_it_down</title><link>https://yangzhenfei.com/posts/20220510210940-write_it_down/</link><pubDate>Tue, 10 May 2022 21:09:00 +0800</pubDate><guid>https://yangzhenfei.com/posts/20220510210940-write_it_down/</guid><description>putting ideas into words
把想法写下来有很多好处：
帮助自己确定是不是真的想清楚了。会经常出现，在脑海中的一个强烈的自认为清晰的想法，写下来其实很单薄和简单，甚至是错误的。 复合思考，大脑的cache太小，需要一个机制把历史的思考拿出来，以此为起点，继续思考，以做到较为深入的探索。 impact，把你的想法告诉更多人。一方面帮助别人更加了解自己（不确定是不是一定是好处，public_or_private），一方面增加与别人联系的机会。 the need to read又认为，读是为了学会写的技巧，写是无可取代的思考过程，而读是（不可取代地）帮助学习如何写的过程（如果是为了获取信息，有其他可以取代读的方法）</description></item><item><title>fontconfig</title><link>https://yangzhenfei.com/posts/20220418170338-fontconfig/</link><pubDate>Mon, 18 Apr 2022 17:03:00 +0800</pubDate><guid>https://yangzhenfei.com/posts/20220418170338-fontconfig/</guid><description>先做一个浏览器测试 遍角次亮采之门 默认
遍角次亮采之门关 中文(大陆) lang=zh-cn
遍角次亮采之门关 中文(台湾) lang=zh-tw
遍角次亮采之门关 中文(香港) lang=zh-hk
遍角次亮采之门关 日文 lang=ja
遍角次亮采之门关 韩文 lang=ko
如果你经常在你在浏览器（有时也出现在PDF）里看到
门关
这种字，并感到困惑。
推荐一个文章：治理fontconfig
几个有趣的事实： 一个unicode码的显示，不仅跟字体有个，也跟locale有关。 同一个「字」，在不同的语言中显示不同。 中文引号 字体网站的实践 选好Sans Serif Mono的字体 Sans: 霞鹜文楷 Serif: zh,方正清刻本悦宋 en, Optima Mono: JetBrains Mono 用字蛛分析静态网页，抽取出需要的字符 部署</description></item><item><title>anki</title><link>https://yangzhenfei.com/posts/20220415110303-anki/</link><pubDate>Fri, 15 Apr 2022 11:03:00 +0800</pubDate><guid>https://yangzhenfei.com/posts/20220415110303-anki/</guid><description>ankijazz</description></item><item><title>elon_musk_5_step</title><link>https://yangzhenfei.com/posts/20220321145625-elon_musk_5_step/</link><pubDate>Mon, 21 Mar 2022 14:56:00 +0800</pubDate><guid>https://yangzhenfei.com/posts/20220321145625-elon_musk_5_step/</guid><description>5-step
MAKE THE REQUIREMENTS LESS DUMB TRY AND DELETE PART OF THE PROCESS SIMPLIFY OR OPTIMIZE ACCELERATE CYCLE TIME AUTOMATE</description></item><item><title>nix</title><link>https://yangzhenfei.com/posts/20220301101256-nix/</link><pubDate>Tue, 01 Mar 2022 10:12:00 +0800</pubDate><guid>https://yangzhenfei.com/posts/20220301101256-nix/</guid><description/></item><item><title>从SICP说起：重新学习（函数式）编程</title><link>https://yangzhenfei.com/posts/20220224200513-sicp/</link><pubDate>Thu, 24 Feb 2022 20:05:00 +0800</pubDate><guid>https://yangzhenfei.com/posts/20220224200513-sicp/</guid><description>从SICP说起 2021年开始，我把主力编辑器换成了 emacs ， 折腾的过程里，似懂非懂地写了一部分 elisp ， 也自然地想起了在本科的时候一直藏在收藏夹里的书：SICP。
惭愧的是，虽然一直知道这本书，实际上却从来没有完整地阅读过。 没想到这次阅读成了一次开端，让我有一种重新学习编程的感觉。
对函数式编程的第一印象 看完SICP前几章之后，印象最深刻的特性是：immutable，stateless，pure function。
这些特性加起来，可以总结出FP的审美倾向：我想要一个static computational graph（directed acyclic graph），而不是一个dynamic state machine（looply graph）。
结合平常写代码的经历，追踪state的变化和理解不同时刻同一个state的含义，确实消耗了大量心智带宽。
而自然的，我们常用的冯诺依曼机器是以存储（也就是状态）为核心的，如何高效地在OOP machine上实现FP呢？
这就需要一些technique的辅助：lazy evaluation/garbage collection：
lazy evaluation把所有可能的状态都提前声明，例如一个state在所有timestamp的record，但是只有真正需要的时候才触发计算。 （这里有点像一个把戏，state其实还是在变化的，但是每次变化我们都认为他是一个新的state_i，以此来保证state_0永远是state_0）。 garbage collection：提前声明的变量那么多，自然有许多是用不到了，那就需要GC去释放资源了。 一些参考 比我总结的更好的FP特性：doing it the fp way in cpp
Immutable variables
In functional programming, you can’t modify a variable after it’s been initialized. You just can’t. You can create new variables but you can’t modify existing variables.
No side effects</description></item><item><title>复合思考</title><link>https://yangzhenfei.com/posts/20220222101253-%E5%A4%8D%E5%90%88%E6%80%9D%E8%80%83/</link><pubDate>Tue, 22 Feb 2022 10:12:00 +0800</pubDate><guid>https://yangzhenfei.com/posts/20220222101253-%E5%A4%8D%E5%90%88%E6%80%9D%E8%80%83/</guid><description>forty-year_career中提到：
One section in Coders at Work, I believe it was Joe Armstrong’s, described spending four hours a week thinking about the future. Each week, their thinking would compound on the previous week’s, letting them see further and further into the future. Over time they were dreaming far beyond their contemporaries.
类似的想法还有：
second-order-thinking node &amp;amp; edge 写下思考，内容有两部分：
直观地展示想要什么，可以认为是node 不同的milestone之间的逻辑经不经得起推敲，可以认为是edge</description></item><item><title>public_or_private</title><link>https://yangzhenfei.com/posts/20220215203814-public_or_private/</link><pubDate>Tue, 15 Feb 2022 20:38:00 +0800</pubDate><guid>https://yangzhenfei.com/posts/20220215203814-public_or_private/</guid><description>https://news.ycombinator.com/item?id=34223288</description></item><item><title>guide of emacs for vim user</title><link>https://yangzhenfei.com/posts/20220209192754-emacs/</link><pubDate>Wed, 09 Feb 2022 19:27:00 +0800</pubDate><guid>https://yangzhenfei.com/posts/20220209192754-emacs/</guid><description>目标用户 singularity追求者 vim vim的modal editing模式非常受欢迎，尤其是以hjkl motion movement为核心的keybinding。
而vim keybinding比vim本身更加流行，浏览器 各种IDE，一些terminal都有vim keybinding。 所以值得一问：
我是喜欢vim还是喜欢vim keybinding
as elisp interpreter emacs最大的特点可能是emacs本身是一个emacs lisp的解释器，大部分emacs的代码都由elisp写成，包括配置文件本身。 与编辑器交互的command，也就是在解释器里执行新的function。
lisp本身是一个很有魅力的语言，简洁的语法，彻底的functional programming支持。 可以在经典教材SICP中看到很全面的介绍。也可以参考Paul Graham的lisp 洗脑文。
另外一点值得一提的是这个lisp解释器的server-client结构。 vim和其他的编译器也有类似的结构，但是可能是因为语言的原因，使用的并不多。 而在emacs中就经常见到一些很灵活的操作，一个我比较喜欢的例子是：org-pomodoro&amp;amp;polybar 写一个shell script，通过 emacsclient -e 执行在emacs配置中声明的一个函数，获取一个文本输出。再把这个shell script放到桌面管理器status line的callback里，做到在桌面显示emacs内部的信息。
org-mode org-mode直接看起来是一个类似markdown的东西，一种标记语法。
使它看起来独特的原因有下面几个点：
structure editing 包括报表在内，有一套比较方便的键盘操作：交换章节、提高/降低层级、加TODO
literal programming 类似jupyter，可以编写代码，边写文档，文档中可以直接包含代码的输出。
digraph G { splines=false; subgraph cluster_1 { problem1[label=&amp;#34;问题&amp;#34;] solve1[label=&amp;#34;解法&amp;#34;] result1[label=&amp;#34;结果&amp;#34;] problem1-&amp;gt;solve1-&amp;gt;result1 } solve2[label=&amp;#34;解法2&amp;#34;] problem1-&amp;gt;solve2-&amp;gt;result1 } GTD 一个永远准备 capture TODO项的GTD系统。
例如正在coding，可以使用 org-capture 加一个TODO
这部分的介绍太多了，应该是很多人入坑emacs的原因。 很多非程序员也在使用emacs，用org-mode做GTD应该算是一个比较主流的原因之一。
we love UI: TUI &amp;amp; GUI emacs是一个完整的GUI程序，所以能享受众多GUI程序的基本人权：</description></item><item><title>about</title><link>https://yangzhenfei.com/about/</link><pubDate>Sat, 01 Jan 2022 00:00:00 +0800</pubDate><guid>https://yangzhenfei.com/about/</guid><description>YANG, Zhenfei</description></item><item><title>latency_numbers</title><link>https://yangzhenfei.com/posts/20211217144946-latency_numbers/</link><pubDate>Fri, 17 Dec 2021 14:49:00 +0800</pubDate><guid>https://yangzhenfei.com/posts/20211217144946-latency_numbers/</guid><description>延迟 Latency Comparison Numbers (~2012) L1 cache reference 0.5 ns Branch mispredict 5 ns L2 cache reference 7 ns 14x L1 cache Mutex lock/unlock 25 ns Main memory reference 100 ns 20x L2 cache, 200x L1 cache Compress 1K bytes with Zippy 3,000 ns 3 us Send 1K bytes over 1 Gbps network 10,000 ns 10 us Read 4K randomly from SSD* 150,000 ns 150 us ~1GB/sec SSD Read 1 MB sequentially from memory 250,000 ns 250 us Round trip within same datacenter 500,000 ns 500 us Read 1 MB sequentially from SSD* 1,000,000 ns 1,000 us 1 ms ~1GB/sec SSD, 4X memory Disk seek 10,000,000 ns 10,000 us 10 ms 20x datacenter roundtrip Read 1 MB sequentially from disk 20,000,000 ns 20,000 us 20 ms 80x memory, 20X SSD Send packet CA-&amp;gt;Netherlands-&amp;gt;CA 150,000,000 ns 150,000 us 150 ms Notes</description></item><item><title>geometric_algebra</title><link>https://yangzhenfei.com/posts/20211215182434-geometric_algebra/</link><pubDate>Wed, 15 Dec 2021 18:24:00 +0800</pubDate><guid>https://yangzhenfei.com/posts/20211215182434-geometric_algebra/</guid><description>A Swift Introduction to Geometric Algebra</description></item><item><title>冥想</title><link>https://yangzhenfei.com/posts/20211213123832-%E5%86%A5%E6%83%B3/</link><pubDate>Mon, 13 Dec 2021 12:38:00 +0800</pubDate><guid>https://yangzhenfei.com/posts/20211213123832-%E5%86%A5%E6%83%B3/</guid><description>netflix的冥想正念指南
冥想就像是坐在路边，看思绪如车辆一般驶入，但是我们并不参与其中。
如何爱上生活 找到感恩的瞬间，感受这个瞬间的状态，强化这种感觉
如何面对压力 对冥想时的杂念进行标记，是思绪还是压力
如何善待他人 想象一个画面，自己 关心的人 讨厌的人，都在某些信号下(阳光洒满全身)，满脸笑容，感受他的快乐
如何应对身体伤痛 想象扫描身体，感受疼痛但是不参与
如何应对愤怒 想象一个关心的人坐在对面，在吸气时把他的痛苦吸走，在呼气时用幸福快乐的感觉填充。同样是一个用来把自己中立出来，观察真正的事务的方法。</description></item><item><title>证伪</title><link>https://yangzhenfei.com/posts/20211213123539-%E8%AF%81%E4%BC%AA/</link><pubDate>Mon, 13 Dec 2021 12:35:00 +0800</pubDate><guid>https://yangzhenfei.com/posts/20211213123539-%E8%AF%81%E4%BC%AA/</guid><description>Motivation 如果一个理论可以强大地推导出任意理论，可能反而是无意义的。
历史上一个参考是弗洛伊德的对梦的解释。还有被熟知的：房间里有一头无法被任何方法探测的大象。
应用 一个理论，被定义属于科学的一个条件：可能被“未来的”某种现象打败。
补充 证伪的定义主要是为了区分方便，本身是个中立，正如科学在一众宗教的关系。
不需要区分高下。
存在许多无法证伪的理论，也可以给我们许多启发，或者至少是一种难得的寄托吧。
另外一个有趣的事实，这个规则更强调对物理世界的研究，按这个规定，数学也被排除在科学圈外。
启发 寻找错误，是比证明一个道理，更加有力的。
我们有时候会以为自己懂了，以为证明出来了。而反例则往往能破除这种幻想。
难怪，对话体，作为一种常见的知识记录问题，在上古时候特别流行：论语、金刚经、理想国。</description></item><item><title>double-entry_bookkeeping</title><link>https://yangzhenfei.com/posts/20211213123003-double_entry_bookkeeping/</link><pubDate>Mon, 13 Dec 2021 12:30:00 +0800</pubDate><guid>https://yangzhenfei.com/posts/20211213123003-double_entry_bookkeeping/</guid><description>double entry
\[income + expenses + equaty + liability = 0\]</description></item><item><title>declarative_programming</title><link>https://yangzhenfei.com/posts/20211202120838-declarative_programming/</link><pubDate>Thu, 02 Dec 2021 12:08:00 +0800</pubDate><guid>https://yangzhenfei.com/posts/20211202120838-declarative_programming/</guid><description> declarative imperative Lisp C TensorFlow PyTorth Nix Apt/Pacman SQL ORM CMake/Makefile build.sh Halide OpenMP/thread pool Symbolic Diff (symforce) Automatic Diff (JAX/Jet)</description></item><item><title>low_latency_audio</title><link>https://yangzhenfei.com/posts/20211130195311-low_latency_audio/</link><pubDate>Tue, 30 Nov 2021 19:53:00 +0800</pubDate><guid>https://yangzhenfei.com/posts/20211130195311-low_latency_audio/</guid><description> jacktrip farplay jamulus</description></item><item><title>books</title><link>https://yangzhenfei.com/posts/20211115172735-books/</link><pubDate>Mon, 15 Nov 2021 17:27:00 +0800</pubDate><guid>https://yangzhenfei.com/posts/20211115172735-books/</guid><description>ray dalio 原则 债务危机 小说 长安十二时辰 兰亭序杀局 扫鼠岭 挽救计划 生死疲劳 球状闪电 超新星纪元 传记 曾国藩传 我的几何人生：丘成桐自传 征服市场的人 万历十五年 哲学(pop philosophy 😛) 刘擎西方现代思想讲义 哲学家们都干了些什么 法学的故事 论语故事 现代性与大屠杀 社会科学 no_ego 组织的逻辑 团队合作的五大障碍 贫穷的秘密 team of teams 置身事内 经济解释 创建系统学 复杂 也许你该找个人聊聊 staff_engineer 谁说大象不能跳舞 hacking 黑客与画家 SICP</description></item><item><title>tools</title><link>https://yangzhenfei.com/posts/20211115121752-tools/</link><pubDate>Mon, 15 Nov 2021 12:17:00 +0800</pubDate><guid>https://yangzhenfei.com/posts/20211115121752-tools/</guid><description>singularity 这里记录能帮助尽快接近singularity的方法。
一般来说，学习曲线陡峭~=能形成累计优势：
一次学习， 终生 受用 不与非开放平台绑定 越用越熟练，上限高，不会浪费时间投入 我的工具 emacs nix/nixos/home-manager anki activitywatch woboq beancount: double-entry_bookkeeping i3wm+i3block bitwarden chromeos: linux+android rime：跨平台词库同步 双拼 Feedly/RSSHub manim fontconfig low_latency_audio intro nixos i3 emacs lsp rust c++ python javascript</description></item><item><title>zettelkasten</title><link>https://yangzhenfei.com/posts/20211115110725-zettelkasten/</link><pubDate>Mon, 15 Nov 2021 11:07:00 +0800</pubDate><guid>https://yangzhenfei.com/posts/20211115110725-zettelkasten/</guid><description>TLDR 如果尝试把这个网状的事实，用树结构去记录，并且线性地讲述出来。
并遭遇挫败。
可以试试用网的结构开始。</description></item></channel></rss>